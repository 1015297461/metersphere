name: Build Docker Image and Push

on:
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: nelonoel/branch-name@v1.0.1

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Cache maven dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-maven-deps
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.m2
        key: ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v1.0.3
     
    - name: Docker Login
      uses: docker/login-action@v1.6.0
      with:
        username: metersphere
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build Docker Image
      uses: docker/build-push-action@v2.2.0
      with:
        build-args: MS_VERSION=${BRANCH_NAME}-b${GITHUB_RUN_NUMBER} 
        tags: metersphere/metersphere:${BRANCH_NAME}
